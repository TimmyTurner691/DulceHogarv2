/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dulcehogar;

import java.util.Arrays;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author jaket
 */
public class RegistrarSocio extends javax.swing.JFrame {

    /**
     * Creates new form RegistrarSocio
     */
    public RegistrarSocio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_rut = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_appaterno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_apmaterno = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_domicilio = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_comuna = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_numsocio = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnt_volverR = new javax.swing.JMenuItem();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registrar Socio");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Ingrese los siguentes datos obligatorios del Socio:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos"));

        jLabel2.setText("RUT (12.345.678-9)");

        jLabel3.setText("Nombre");

        jLabel4.setText("Apellido Paterno");

        jLabel5.setText("Apellido Materno");

        jLabel6.setText("Telefono (+56912345678)");

        jLabel7.setText("Domicilio (123 Calle Principal)");

        jLabel8.setText("Comuna");

        jLabel9.setText("Numero de Socio");

        txt_numsocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_numsocioActionPerformed(evt);
            }
        });

        jButton1.setText("REGISTRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_apmaterno, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_appaterno, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_rut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_telefono)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txt_domicilio)
                    .addComponent(jLabel8)
                    .addComponent(txt_comuna)
                    .addComponent(jLabel9)
                    .addComponent(txt_numsocio, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                .addGap(41, 41, 41))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_rut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_appaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_comuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_apmaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_numsocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jMenu1.setText("Volver a Inicio");

        mnt_volverR.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        mnt_volverR.setText("Volver");
        mnt_volverR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnt_volverRActionPerformed(evt);
            }
        });
        jMenu1.add(mnt_volverR);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnt_volverRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnt_volverRActionPerformed
        new EjecucionAplicacion().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_mnt_volverRActionPerformed

    private void txt_numsocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_numsocioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_numsocioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Socio nuevoSocio = null;
        
        int numSocio = RegistrarSocio.validarNumero(txt_numsocio.getText());

        if (numSocio == 0) {
            JOptionPane.showMessageDialog(null, "El numero de "
                    + "socio debe ser de 9 digitos!", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String rutSocio = RegistrarSocio.validarRut(txt_rut.getText());
        
        if (rutSocio.equals("")) {
            JOptionPane.showMessageDialog(null, "RUT invalido! "
                    + "Por favor, intente de nuevo.", 
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        nuevoSocio = new Socio(numSocio, rutSocio);
        
        String nombreSocio = RegistrarSocio.validarNombre(txt_nombre.getText());
        
        if (nombreSocio.equals("")) {
            return;
        } else {
            nuevoSocio.setNombre(nombreSocio);
        }
        
        String appaternoSocio = RegistrarSocio.validarNombre(txt_appaterno.getText());
        
        if (appaternoSocio.equals("")) {
            return;
        } else {
            nuevoSocio.setApellidoPaterno(appaternoSocio);
        }
        
        String apmaternoSocio = RegistrarSocio.validarNombre(txt_apmaterno.getText());
        
        if (apmaternoSocio.equals("")) {
            return;
        } else {
            nuevoSocio.setApellidoMaterno(apmaternoSocio);
        }
        
        String telefonoSocio = RegistrarSocio.validarTelefono(txt_telefono.getText());
        
        if (telefonoSocio.equals("")) {
            return;
        } else {
            nuevoSocio.setTelefono(telefonoSocio);
        }
        
        String domicilioSocio = RegistrarSocio.validarDomicilio(txt_domicilio.getText());
        
        if (domicilioSocio.equals("")) {
            return;
        } else {
            nuevoSocio.setDomicilio(domicilioSocio);
        }
        
        String comunaSocio = RegistrarSocio.validarComuna(txt_comuna.getText());
        
        if (comunaSocio.equals("")) {
            return;
        } else {
            nuevoSocio.setComuna(comunaSocio);
        }
        
        EjecucionAplicacion.getSocios().add(nuevoSocio);
        
        JOptionPane.showMessageDialog(
            null, 
            "Socio creado con exito!", 
            "Exito!", 
            JOptionPane.INFORMATION_MESSAGE
        );
        
        new EjecucionAplicacion().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarSocio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarSocio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarSocio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarSocio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarSocio().setVisible(true);
            }
        });
    }
    
    private static int validarNumero(String numero) {  
        try {
            int num = Integer.parseInt( numero);

            // Comprobar que el largo del numero de socio es 9.
            if (String.valueOf(num).length() != 9) {
                return 0;
            } else {return num;}

        } catch (NumberFormatException e) {
            return 0;
        }
        
    }
    
    private static String validarRut(String rut) {

        // Si rut no es de largo 12, es invalido.
        if (rut.length() != 12) {
            return "";

        } else {
            if (!validarIndicesRut(rut)) return "";

            return rut; 
        }
    }
    
    private static boolean validarIndicesRut(String rut) {
        // Indices donde deberia haber numeros en el RUT.
        Integer[] indicesNumerosRut = {0, 1, 3, 4, 5, 7, 8, 9};

        // Lista de caracteres numericos validos.
        String[] numeros = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"};

        // Revisar cada indice de rut para verificar el tipo de 
        // caracter.
        for (int i = 0; i <= 11; i++) {
            String indice = String.valueOf(rut.charAt(i));

            // Revisar si los caracteres numericos de rut son numeros.
            if (Arrays.asList(indicesNumerosRut).contains(i) && 
                    !Arrays.asList(numeros).contains(indice)) {
                System.out.println("RUT Invalido"); 

                return false;

            // Revisar si los puntos, guion, y dv estan en las posiciones correctas.
            } else if ((i == 2 || i == 6) && !indice.equals(".") &&
                    (i == 10 && !indice.equals("-")) &&
                    i == 11 && !Arrays.asList(numeros).contains(indice) && 
                    !indice.equalsIgnoreCase("K")) {
                System.out.println("RUT Invalido!");

                return false;
            }
        }

        return true;
    }
    
    private static String validarNombre(String nombre) {

        // Validar formato correcto de nombre.
        if (!validarIngresoNombre(nombre)) {
            return "";
        }
        return nombre;
        
    }
    
    private static boolean validarIngresoNombre(String nombre) {
        // Verificar que el ingreso es solo de valores alfabeticos.
        if (!nombre.matches("^[A-Za-zÀ-ÖØ-öø-ÿ]+([ '-][A-Za-zÀ-ÖØ-öø-ÿ]+)*$")) {
            JOptionPane.showMessageDialog(null, "Los nombres "
                    + "no pueden quedar en blanco y solo se aceptan letras "
                    + "alfabeticas!", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Revisar si el nombre ingresado parte con mayuscula.
        if (!Character.isUpperCase(nombre.charAt(0))) {
            JOptionPane.showMessageDialog(null, "Los nombres deben partir con mayuscula!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }
    
    public static String validarTelefono(String telefono) {
        if (telefono.equals("") ) {
            // Si el usuario cancela, se sale del ciclo
            JOptionPane.showMessageDialog(null, "Numero telefono no valido!", "Error", JOptionPane.ERROR_MESSAGE);
            return "";
        }
        if (!telefonoValido(telefono)) {
            JOptionPane.showMessageDialog(null, "Numero telefono no valido!", "Error", JOptionPane.ERROR_MESSAGE);
            return "";
        }
        

        return telefono; 
    }
    
    public static boolean telefonoValido(String telefono) {
        // Expresión regular para números telefónicos chilenos
        String regex = "^(?:\\+?56)?(?:0?9\\d{8}|(?:0?[2-9])\\s?\\d{4}\\s?\\d{4})$";
        Pattern pattern = Pattern.compile(regex);
        return pattern.matcher(telefono).matches();
    }
    
    public static String validarDomicilio(String domicilio) {
        if (domicilio.equals("")) {
            // Si el usuario cancela, se sale del ciclo
            JOptionPane.showMessageDialog(null, "La direccion ingresada no es valida.", "Error", JOptionPane.ERROR_MESSAGE);
            return "";
        }
        if (!validarDomicilioValida(domicilio)) {
            JOptionPane.showMessageDialog(null, "La direccion ingresada no es valida.", "Error", JOptionPane.ERROR_MESSAGE);
            return "";
        }
        
        return domicilio;
    }
    
    private static boolean validarDomicilioValida(String domicilio) {
        String regex = "^[0-9]+\\s+[a-zA-Z0-9\\s]+$";
        Pattern pattern = Pattern.compile(regex);
        return pattern.matcher(domicilio).matches();
    }
    
    private static String validarComuna(String comuna) {
            
        // Validar formato correcto de nombre comuna.

        if (!validarIngresoComuna(comuna)) {
            return "";
        }

        return comuna;
        
    }
    
    private static boolean validarIngresoComuna(String comuna) {
        // Verificar que el ingreso es solo de valores alfabeticos.
        if (!comuna.matches("^[A-Za-zÀ-ÖØ-öø-ÿ]+([ '-][A-Za-zÀ-ÖØ-öø-ÿ]+)*$")) {
            JOptionPane.showMessageDialog(null, "Solo se permiten letras alfabeticas para comunas!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Revisar si el nombre ingresado parte con mayuscula.
        if (!Character.isUpperCase(comuna.charAt(0))) {
            JOptionPane.showMessageDialog(null, "Los nombres de las comunas deben partir con mayuscula!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem mnt_volverR;
    private javax.swing.JTextField txt_apmaterno;
    private javax.swing.JTextField txt_appaterno;
    private javax.swing.JTextField txt_comuna;
    private javax.swing.JTextField txt_domicilio;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_numsocio;
    private javax.swing.JTextField txt_rut;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
